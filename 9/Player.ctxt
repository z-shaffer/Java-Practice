#BlueJ class context
comment0.target=Player
comment0.text=\r\nCreate\ a\ Player\ class\ that\ has\ a\ name\ (String),\ maximum\ hit\ points\ (int),\r\ncurrent\ number\ of\ hitpoints\ (int),\ armor\ class\ (int),\ level\ (int),\r\nmovement\ speed\ (int),\ possible\ moves\ (Moves),\ and\ random\ number\ generator.\r\n
comment1.params=
comment1.target=Player()
comment1.text=\r\n\ The\ no-arg\ constructor\ should\ initialize\ the\ fields.\ \r\n\ The\ name\ should\ be\ Player1\ and\ the\ class\ should\ be\ Fighter\ (from\ the\ PlayerClass\ enum).\r\n\ You\ should\ initialize\ the\ generator\ field\ to\ a\ new\ Random\ object.\ \r\n\ This\ being\ a\ new\ player,\ the\ level\ field\ should\ be\ 1.\ Call\ the\ calculateHitPointMax\r\n\ method\ which\ initializes\ the\ hitpointMax\ field\ (you\ will\ fill\ in\ the\ \r\n\ calculateHitPointMax\ method\ later).\ The\ hitpointCurrent\ field\ should\ equal\r\n\ the\ hitpointMax\ field.\ Call\ the\ calculateArmorClass\ method\ which\ initializes\ \r\n\ the\ armorClass\ field\ (you\ will\ fill\ in\ the\ calculateArmorClass\ method\ later).\r\n\ Call\ the\ calculateMovementSpeed\ method\ which\ initializes\ the\ movementSpeed\ \r\n\ field\ (you\ will\ fill\ in\ the\ calculateMovementSpeed\ method\ later).\ Initialize\ \r\n\ the\ basicMove,\ rangedMove,\ defenseMove,\ and\ moveMove\ fields\ of\ the\ player\ to\ be\ \r\n\ these\ 4\ things\:\ a\ Move\ with\ MoveType\ BasicAttack\ that\ has\ a\ range\ of\ 1,\ a\ Move\ with\ \r\n\ MoveType\ RangedAttack\ that\ has\ a\ range\ of\ HALF\ the\ movementSpeed\ (integer\ division\ \r\n\ is\ okay\ here),\ a\ Move\ with\ MoveType\ Defend\ that\ has\ a\ range\ of\ 0,\ a\ Move\ with\ MoveType\ \r\n\ Move\ that\ has\ a\ range\ the\ same\ as\ the\ movementSpeed\ field.\ Note\:\ The\ Move\ constructor\r\n\ takes\ a\ MoveType\ and\ an\ int\ for\ range.\r\n
comment10.params=moveType
comment10.target=java.lang.String\ makeMove(MoveType)
comment10.text=\r\n\ The\ method\ will\ make\ a\ move\ for\ the\ player.\ Use\ \r\n\ the\ moveType\ parameter\ to\ determine\ which\ move\ will\ be\ \r\n\ performed.\ If\ any\ move\ that\ is\ an\ attack\ (ranged\ attack\ or\ \r\n\ basic\ attack)\ is\ performed,\ roll\ a\ D20\ (a\ dice\ with\ 20\ sides).\ \r\n\ If\ the\ result\ plus\ the\ player\u2019s\ level\ is\ greater\ than\ 10,\ \r\n\ return\ \u201CHit\u201D,\ otherwise\ \u201CMiss\u201D.\ If\ a\ defenseMove\ is\ performed,\r\n\ roll\ a\ D20\ for\ an\ attack\ made\ against\ the\ player\ and\ a\ D20\ \r\n\ for\ the\ player\u2019s\ reaction.\ If\ the\ attack\ roll\ plus\ 10\ is\ \r\n\ higher\ than\ the\ reaction\ roll\ plus\ the\ armorClass\ field,\ \r\n\ then\ return\ \u201CFailed\ to\ Defend\u201D,\ otherwise\ return\ \u201CDefended\u201D.\r\n\ If\ a\ moveMove\ is\ performed,\ choose\ a\ random\ number\ between\ 1\r\n\ and\ the\ movementSpeed\ and\ return\ \u201CMoved\ n\ spaces\u201D\ where\ n\ is\r\n\ the\ random\ number.\r\n
comment11.params=
comment11.target=java.lang.String\ moveList()
comment11.text=\r\n\ This\ will\ return\ a\ String\ with\ the\ list\ of\ moves\ a\ Player\r\n\ can\ make\ formated\ as\ follows\:\r\n\ BASICATTACK\ for\ \#\\n\r\n\ RANGEDATTACK\ for\ \#\\n\r\n\ DEFEND\ for\ \#\\n\r\n\ MOVE\ for\ \#\r\n\r\n\ Where\ \#\ is\ the\ range\ of\ each\ Move.\r\n
comment12.params=
comment12.target=java.lang.String\ toString()
comment12.text=\r\n\ This\ should\ return\ a\ String\ representation\ of\ the\ Player\ like\r\n\ the\ following\:\r\n\ "William\ Lvl6\ DRUID\ with\ 23/45HP"\r\n
comment13.params=player
comment13.target=boolean\ equals(Player)
comment13.text=\r\n\ This\ should\ compare\ the\ passed\ in\ Player\ to\ the\ current\ one.\r\n
comment14.params=
comment14.target=Move\ getBasicMove()
comment14.text=\r\n\ Create\ getter\ for\ the\ BasicMove.\r\n
comment15.params=
comment15.target=Move\ getRangedMove()
comment15.text=\r\n\ Create\ getter\ for\ the\ RangedMove.\r\n
comment16.params=
comment16.target=Move\ getDefenseMove()
comment16.text=\r\n\ Create\ getter\ for\ the\ DefenseMove.\r\n
comment17.params=
comment17.target=Move\ getMoveMove()
comment17.text=\r\n\ Create\ getter\ for\ the\ MoveMove.\r\n
comment18.params=name
comment18.target=void\ setName(java.lang.String)
comment19.params=playerClass
comment19.target=void\ setPlayerClass(PlayerClass)
comment2.params=name\ playerClass\ generator
comment2.target=Player(java.lang.String,\ PlayerClass,\ java.util.Random)
comment2.text=\r\n\ The\ argument\ constructor\ should\ take\ a\ name\ and\ player\ class.\ It\ should\r\n\ set\ both\ fields\ to\ those\ values,\ then\ do\ the\ same\ as\ no-arg\ constructor.\r\n
comment20.params=
comment20.target=java.lang.String\ getName()
comment21.params=
comment21.target=PlayerClass\ getPlayerClass()
comment22.params=
comment22.target=int\ getLevel()
comment23.params=
comment23.target=int\ getHitpointMax()
comment24.params=
comment24.target=int\ getHitpointCurrent()
comment25.params=
comment25.target=int\ getArmorClass()
comment26.params=
comment26.target=int\ getMovementSpeed()
comment3.params=copy
comment3.target=Player(Player)
comment3.text=\r\n\ Creates\ a\ Player\ identical\ to\ the\ passed\ in\ Player\r\n
comment4.params=
comment4.target=void\ calculateArmorClass()
comment4.text=\r\n\ The\ calculateArmorClass\ method\:\ The\ method\ sets\ the\ \r\n\ armorClass\ field\ of\ the\ player\ by\ using\ this\ formula\:\ \r\n\ (level\ *\ class\ bonus)\ +\ ten.\ Then,\ if\ the\ resulting\ \r\n\ armorClass\ is\ greater\ than\ 17,\ the\ encumbered\ field\ is\ \r\n\ set\ to\ true,\ otherwise\ it\ is\ false.\r\n\ \r\n\ Table\ of\ PlayerClass\ ->\ Armor\ Class\ Bonus\ can\ be\r\n\ found\ in\ the\ instructions\r\n
comment5.params=
comment5.target=void\ calculateHitPointMax()
comment5.text=\r\n\ The\ calculateHitPointMax\ method\:\ The\ method\ sets\ \r\n\ the\ hitpointMax\ field\ of\ the\ player\ by\ simulating\ \r\n\ dice\ rolls\ (using\ the\ Random\ generator\ field).\ For\ each\ \r\n\ level\ of\ the\ player,\ roll\ the\ dice\ one\ time.\ Each\ \r\n\ PlayerClass\ will\ roll\ a\ different\ die.\ The\ sum\ of\ \r\n\ the\ rolls\ plus\ the\ player\u2019s\ level\ is\ their\ hitpointMax.\ \r\n\ The\ dice\ chart\ is\ as\ follows\:\r\n\ --Class--|--Dice--\r\n\ Fighter\ \ |\ \ D6\ (six\ sides\ \ \ -\ can\ roll\ 1\ through\ 6)\r\n\ Wizard\ \ \ |\ \ D4\ (four\ sides\ \ -\ can\ roll\ 1\ through\ 4)\r\n\ Rogue\ \ \ \ |\ \ D4\ (four\ sides\ \ -\ can\ roll\ 1\ through\ 4)\r\n\ Cleric\ \ \ |\ \ D6\ (six\ sides\ \ \ -\ can\ roll\ 1\ through\ 6)\r\n\ Barbarian|\ \ D8\ (eight\ sides\ -\ can\ roll\ 1\ through\ 8)\r\n\ Druid\ \ \ \ |\ \ D6\ (six\ sides\ \ \ -\ can\ roll\ 1\ through\ 6)\r\n\ Bard\ \ \ \ \ |\ \ D4\ (four\ sides\ \ -\ can\ roll\ 1\ through\ 4)\r\n\ Use\ the\ number\ associated\ with\ each\ PlayerClass\ to\r\n\ determine\ the\ maximum\ number\ the\ generator\ will\ roll.\ \r\n\ For\ example,\ rolling\ a\ D43\ (a\ dice\ with\ 43\ sides)\ has\ a\ \r\n\ maximum\ number\ of\ 43\ and\ a\ minimum\ number\ of\ 1.\r\n
comment6.params=
comment6.target=void\ calculateMovementSpeed()
comment6.text=\r\n\ The\ method\ sets\ the\ movementSpeed\ field\ of\ the\ \r\n\ player\ by\ using\ this\ formula\:\ level\ +\ base\ speed\ -\ \r\n\ encumbrance\ penalty.\ Each\ PlayerClass\ has\ a\ different\ \r\n\ base\ speed\ and\ encumbrance\ penalty.\ The\ speed\ and\ encumbrance\ \r\n\ chart\ is\ as\ follows\:\r\n\ --PlayerClass--|--Base\ Speed--|--Encumbered\ Penalty--\r\n\ Fighter\ \ \ \ \ \ |\ \ 3\ \ \ \ \ \ \ \ |\ \ 2\r\n\ Wizard\ \ \ \ \ \ \ |\ \ 5\ \ \ \ \ \ \ \ |\ \ 4\r\n\ Rogue\ \ \ \ \ \ \ \ |\ \ 3\ \ \ \ \ \ \ \ |\ \ 1\r\n\ Cleric\ \ \ \ \ \ \ |\ \ 4\ \ \ \ \ \ \ \ |\ \ 2\r\n\ Barbarian\ \ \ \ |\ \ 3\ \ \ \ \ \ \ \ |\ \ 3\r\n\ Druid\ \ \ \ \ \ \ \ |\ \ 4\ \ \ \ \ \ \ \ |\ \ 1\r\n\ Bard\ \ \ \ \ \ \ \ \ |\ \ 3\ \ \ \ \ \ \ \ |\ \ 1\r\n\ The\ movementSpeed\ cannot\ fall\ below\ 2.\ Ensure\ this\ will\ not\ happen.\r\n
comment7.params=
comment7.target=void\ levelUp()
comment7.text=\r\n\ This\ will\ level\ the\ Player\ up\ one\ level.\ Doing\ this,\ you\ will\ need\ to\r\n\ redetermine\ the\ Player's\ max\ hitpoints,\ armor\ class,\ and\ movement\ speed.\r\n\ You\ will\ then\ need\ to\ update\ their\ moves\ to\ reflect\ the\ updated\ movement\r\n\ speed\ (HALF).\r\n
comment8.params=amount
comment8.target=void\ takeDamage(int)
comment8.text=\r\n\ \ \ \ This\ should\ reduce\ the\ Player's\ current\ hitpoints\ equal\ to\ the\r\n\ \ \ \ value\ of\ the\ amount\ passed\ in,\ but\ not\ less\ than\ 0.\r\n
comment9.params=amount
comment9.target=void\ heal(int)
comment9.text=\r\n\ \ \ \ This\ should\ increase\ the\ Player's\ current\ hitpoints\ equal\ to\ the\r\n\ \ \ \ value\ of\ the\ amount\ passed\ in,\ but\ not\ higher\ than\ the\ max.\r\n
numComments=27
